import time
import sys
import matplotlib.pyplot as plt
sys.setrecursionlimit(10000)  # Naikkan batas rekursi, misalnya ke 10.000

# Fungsi Iteratif
def hitung_biaya_tol_iteratif(jarak, tarif_per_km, waktu_per_km):
    total_biaya = 0
    total_waktu = 0
    for km in range(1, jarak + 1):
        total_biaya += tarif_per_km
        total_waktu += waktu_per_km
    return total_biaya, total_waktu

# Fungsi Rekursif
def hitung_biaya_tol_rekursif(jarak, tarif_per_km, waktu_per_km):
    if jarak == 0:
        return 0, 0
    biaya_sebelumnya, waktu_sebelumnya = hitung_biaya_tol_rekursif(jarak - 1, tarif_per_km, waktu_per_km)
    return biaya_sebelumnya + tarif_per_km, waktu_sebelumnya + waktu_per_km

# Fungsi Eksperimen
def eksperimen(jarak, tarif_per_km, waktu_per_km):
    # Menghitung dengan metode Iteratif
    start_iteratif = time.time()
    hasil_iteratif = hitung_biaya_tol_iteratif(jarak, tarif_per_km, waktu_per_km)
    end_iteratif = time.time()

    # Menghitung dengan metode Rekursif
    start_rekursif = time.time()
    hasil_rekursif = hitung_biaya_tol_rekursif(jarak, tarif_per_km, waktu_per_km)
    end_rekursif = time.time()

    # Memastikan hasil iteratif dan rekursif sama
    assert hasil_iteratif == hasil_rekursif, "Hasil Iteratif dan Rekursif Tidak Sama!"

    return (end_iteratif - start_iteratif), (end_rekursif - start_rekursif), hasil_iteratif

# Visualisasi Analisis
def visualisasi_analisis(tarif_per_km, waktu_per_km):
    ukuran_masukan = [10, 50, 100, 500, 1000]
    waktu_iteratif = []
    waktu_rekursif = []

    for jarak in ukuran_masukan:
        waktu_i, waktu_r, _ = eksperimen(jarak, tarif_per_km, waktu_per_km)
        waktu_iteratif.append(waktu_i)
        waktu_rekursif.append(waktu_r)

    # Menampilkan tabel hasil analisis
    print("\nAnalisis Waktu Eksekusi")
    print("+----------------+----------------+----------------+")
    print("| Jarak (km)    | Waktu Iteratif | Waktu Rekursif |")
    print("+----------------+----------------+----------------+")
    for i, jarak in enumerate(ukuran_masukan):
        print(f"| {jarak:<14} | {waktu_iteratif[i]:<14.6f} | {waktu_rekursif[i]:<14.6f} |")
    print("+----------------+----------------+----------------+")

    # Menentukan ukuran grafik
    plt.figure(figsize=(10, 6))
    plt.plot(ukuran_masukan, waktu_iteratif, label="Iteratif", marker='o', color='blue', linestyle='--', linewidth=2)
    plt.plot(ukuran_masukan, waktu_rekursif, label="Rekursif", marker='x', color='red', linestyle='-', linewidth=2)
    plt.title("Analisis Waktu Eksekusi Iteratif vs Rekursif")
    plt.xlabel("Jarak (km)")
    plt.ylabel("Waktu Eksekusi (detik)")
    plt.legend()
    plt.grid(True)
    plt.show()

# Contoh Penggunaan
def main():
    print("\n--- Sistem Perhitungan Biaya Tol ---")
    jarak = int(input("Masukkan jarak perjalanan (dalam km): "))

    tarif_per_km = 5000  # Biaya per km
    waktu_per_km = 2  # Waktu per km dalam menit

    waktu_iteratif, waktu_rekursif, hasil = eksperimen(jarak, tarif_per_km, waktu_per_km)

    print(f"\nTotal Biaya Perjalanan: Rp{hasil[0]:,}")
    print(f"Total Waktu Perjalanan: {hasil[1]} menit")
    print(f"Waktu Eksekusi Iteratif: {waktu_iteratif:.5f} detik")
    print(f"Waktu Eksekusi Rekursif: {waktu_rekursif:.5f} detik")

    # Visualisasi analisis
    visualisasi_analisis(tarif_per_km, waktu_per_km)

if _name_ == "_main_":
    main()
